name: CI

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  GH_IMAGE_ID: ghcr.io/${{ github.repository_owner }}/tg-likes-bot
  YA_IMAGE_ID: cr.yandex/${{ secrets.YA_CR_ID }}/tg-likes-bot

jobs:

  version:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v3
        if: github.ref == 'refs/heads/master'
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs:
      - version

    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Build and push Docker image
        id: build
        run: |
          VERSION=$(git describe --tags --always | cut -c 2-)
          docker build . --file Dockerfile --tag $GH_IMAGE_ID:$VERSION --tag $GH_IMAGE_ID:latest
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker push $GH_IMAGE_ID:$VERSION
          echo "${{ secrets.YA_OAUTH }}" | docker login cr.yandex -u oauth --password-stdin
          docker tag $GH_IMAGE_ID:$VERSION $YA_IMAGE_ID:$VERSION
          docker push $YA_IMAGE_ID:$VERSION
          echo "image=$GH_IMAGE_ID:$VERSION" >> $GITHUB_OUTPUT

    outputs:
      image: ${{ steps.build.outputs.image }}

  quality:
    needs:
      - build

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: bot
          POSTGRES_PASSWORD: bot
          POSTGRES_DB: bot
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    container:
      image: ${{ needs.build.outputs.image }}
      env:
        APP_DB_HOST: postgres

    steps:
      - name: Run tests
        run: |
          cd /app
          scripts/lint.sh
          scripts/test.sh
